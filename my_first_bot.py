import requests
import json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

TOKEN = "8489310512:AAE40jUiqHaWj2rvRfkc0-3wYrztA_2cI2k"

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä
games_cache = {}

# ========== E–üIC GAMES API ==========
def get_epic_games():
    try:
        url = "https://store-site-backend-static.ak.epicgames.com/freeGamesPromotions"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Accept': 'application/json'
        }
        
        response = requests.get(url, headers=headers, timeout=15)
        response.raise_for_status()
        data = response.json()
        
        games = []
        for game in data['data']['Catalog']['searchStore']['elements']:
            if game.get('promotions') and game['promotions']['promotionalOffers']:
                title = game['title']
                game_id = game['id']
                price_info = game['price']['totalPrice']
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É
                original_price = price_info['fmtPrice']['originalPrice']
                discount_price = price_info['fmtPrice']['discountPrice']
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                images = game.get('keyImages', [])
                image_url = next((img['url'] for img in images if img['type'] == 'Thumbnail'), None)
                
                game_data = {
                    'title': title,
                    'original_price': original_price,
                    'discount_price': discount_price,
                    'url': f'https://store.epicgames.com/p/{game_id.lower()}',
                    'image': image_url,
                    'store': 'epic'
                }
                
                games.append(game_data)
                if len(games) >= 10:  # –ë–µ—Ä–µ–º –±–æ–ª—å—à–µ –¥–ª—è –∫—ç—à–∞
                    break
        
        return games[:5]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 5 –ª—É—á—à–∏—Ö
        
    except Exception as e:
        print(f"Epic Games error: {e}")
        return []

# ========== GOG API ==========
def get_gog_games():
    try:
        url = "https://www.gog.com/games/ajax/filtered?mediaType=game&page=1&sort=popularity"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        
        response = requests.get(url, headers=headers, timeout=15)
        response.raise_for_status()
        data = response.json()
        
        games = []
        for product in data['products'][:10]:  # –ë–µ—Ä–µ–º –±–æ–ª—å—à–µ –¥–ª—è –∫—ç—à–∞
            if product.get('price'):
                game_data = {
                    'title': product['title'],
                    'original_price': f"${product['price']['amount']}",
                    'discount_price': f"${product['price']['amount']}",
                    'url': f"https://www.gog.com{product['url']}",
                    'image': product['image'] + '.jpg',
                    'store': 'gog'
                }
                games.append(game_data)
        
        return games[:5]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 5 –ª—É—á—à–∏—Ö
        
    except Exception as e:
        print(f"GOG error: {e}")
        return []

# ========== –ö–û–ú–ê–ù–î–ê /START ==========
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üéÆ Epic Games", callback_data="store_epic")],
        [InlineKeyboardButton("üïπÔ∏è GOG.com", callback_data="store_gog")],
        [InlineKeyboardButton("üìä –û –±–æ—Ç–µ", callback_data="about")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üéØ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GameDeals Bot!</b>\n\n"
        "–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –∏–≥—Ä–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö:\n"
        "‚Ä¢ üî• –ì–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏\n"
        "‚Ä¢ üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã\n"
        "‚Ä¢ üí∞ –õ—É—á—à–∏–µ —Ü–µ–Ω—ã\n\n"
        "<b>–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:</b>",
        parse_mode='HTML',
        reply_markup=reply_markup
    )

# ========== –ü–û–ö–ê–ó–ê–¢–¨ –ò–ì–†–´ ==========
async def show_store_games(update: Update, context: ContextTypes.DEFAULT_TYPE, store_type: str):
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä—ã
    if store_type == 'epic':
        games = get_epic_games()
        store_name = "Epic Games"
    else:
        games = get_gog_games()
        store_name = "GOG.com"
    
    if not games:
        await query.edit_message_text(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—ã –∏–∑ {store_name}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode='HTML'
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
    games_cache[query.message.chat_id] = games
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–∞–º–∏
    message = f"üéÆ <b>{store_name} - –¢–æ–ø –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</b>\n\n"
    for i, game in enumerate(games[:5], 1):
        message += f"{i}. <b>{game['title']}</b>\n"
        if game['discount_price'] != '0':
            message += f"   üí∞ <s>{game['original_price']}</s> ‚Üí {game['discount_price']}\n"
        else:
            message += f"   üéÅ <b>–ë–ï–°–ü–õ–ê–¢–ù–û!</b>\n"
        message += f"   üîó <a href='{game['url']}'>–ö—É–ø–∏—Ç—å</a>\n\n"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = []
    for i in range(min(5, len(games))):
        keyboard.append([InlineKeyboardButton(f"üìñ {games[i]['title'][:20]}...", callback_data=f"detail_{i}")])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –º–∞–≥–∞–∑–∏–Ω–∞–º", callback_data="back_to_stores")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        message,
        parse_mode='HTML',
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

# ========== –î–ï–¢–ê–õ–¨–ù–´–ô –ü–†–û–°–ú–û–¢–† ==========
async def show_game_details(update: Update, context: ContextTypes.DEFAULT_TYPE, game_index: int):
    query = update.callback_query
    await query.answer()
    
    chat_id = query.message.chat_id
    if chat_id not in games_cache:
        await query.edit_message_text("‚ùå –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏. –í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω —Å–Ω–æ–≤–∞.")
        return
    
    games = games_cache[chat_id]
    if game_index >= len(games):
        await query.edit_message_text("‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    
    game = games[game_index]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = f"üéØ <b>{game['title']}</b>\n\n"
    
    if game['store'] == 'epic':
        message += f"üè™ <b>–ú–∞–≥–∞–∑–∏–Ω:</b> Epic Games\n"
    else:
        message += f"üè™ <b>–ú–∞–≥–∞–∑–∏–Ω:</b> GOG.com\n"
    
    if game['discount_price'] != '0' and game['discount_price'] != game['original_price']:
        message += f"üí∞ <b>–¶–µ–Ω–∞:</b> <s>{game['original_price']}</s> ‚Üí {game['discount_price']}\n"
        message += f"üî• <b>–°–∫–∏–¥–∫–∞:</b> –û—Ç–ª–∏—á–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!\n"
    elif game['discount_price'] == '0':
        message += f"üéÅ <b>–°—Ç–∞—Ç—É—Å:</b> –ë–ï–°–ü–õ–ê–¢–ù–û!\n"
    else:
        message += f"üí∞ <b>–¶–µ–Ω–∞:</b> {game['original_price']}\n"
    
    message += f"\nüì¶ <b>–°—Å—ã–ª–∫–∞:</b> <a href='{game['url']}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ</a>\n\n"
    message += "‚≠ê <i>–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</i>"
    
    # –ö–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üõí –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å", url=game['url'])],
        [InlineKeyboardButton("üîô –ö —Å–ø–∏—Å–∫—É –∏–≥—Ä", callback_data=f"back_to_{game['store']}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        message,
        parse_mode='HTML',
        reply_markup=reply_markup,
        disable_web_page_preview=False  # –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
    )

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ù–û–ü–û–ö ==========
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    
    if data == 'store_epic':
        await show_store_games(update, context, 'epic')
    elif data == 'store_gog':
        await show_store_games(update, context, 'gog')
    elif data == 'back_to_stores':
        await start(update, context)
    elif data.startswith('detail_'):
        game_index = int(data.split('_')[1])
        await show_game_details(update, context, game_index)
    elif data.startswith('back_to_'):
        store_type = data.split('_')[2]
        await show_store_games(update, context, store_type)
    elif data == 'about':
        await query.answer("GameDeals Bot v1.0 ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ª—É—á—à–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Å–¥–µ–ª–∫–∏!", show_alert=True)

# ========== –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ==========
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("‚úÖ GameDeals Bot –∑–∞–ø—É—â–µ–Ω!")
    
    while True:
        try:
            application.run_polling(
                poll_interval=3.0,
                timeout=10.0,
                drop_pending_updates=True
            )
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)

if __name__ == "__main__":
    main()
